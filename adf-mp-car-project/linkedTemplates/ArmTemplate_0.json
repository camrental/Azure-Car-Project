{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-mp-car-project"
		},
		"AzureSqlDatabase1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'AzureSqlDatabase1'"
		},
		"ls_databricks_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'ls_databricks'"
		},
		"ls_datalake_gen2_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_datalake_gen2'"
		},
		"ls_http_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'ls_http'"
		},
		"AzureSqlDatabase1_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "mpcarsalesserver.database.windows.net"
		},
		"AzureSqlDatabase1_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "carsales"
		},
		"AzureSqlDatabase1_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminmp"
		},
		"ls_databricks_properties_typeProperties_existingClusterId": {
			"type": "string",
			"defaultValue": "0211-203836-za333ei3"
		},
		"ls_datalake_gen2_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://carmpdatalake.dfs.core.windows.net/"
		},
		"ls_http_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://raw.githubusercontent.com/"
		},
		"ls_http_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "camrental"
		},
		"ls_key_vault_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://mpcarprojectkeyvault.vault.azure.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('AzureSqlDatabase1_properties_typeProperties_server')]",
					"database": "[parameters('AzureSqlDatabase1_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('AzureSqlDatabase1_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('AzureSqlDatabase1_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_databricks')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-1479202735506268.8.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('ls_databricks_accessToken')]"
					},
					"existingClusterId": "[parameters('ls_databricks_properties_typeProperties_existingClusterId')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_datalake_gen2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_datalake_gen2_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_datalake_gen2_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_http')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('ls_http_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Basic",
					"userName": "[parameters('ls_http_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ls_http_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_key_vault')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('ls_key_vault_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_archieve_bronze')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_datalake_gen2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SinkFileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().SinkFileName",
							"type": "Expression"
						},
						"folderPath": "archieve",
						"fileSystem": "bronze"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_datalake_gen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_bronze')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_datalake_gen2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "rawdata",
						"fileSystem": "bronze"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_datalake_gen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_git')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_http",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"fileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "camrental/Azure-Car-Project/refs/heads/main/Files/Sales/@{dataset().fileName}",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_http')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sqlDB')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"tableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Branch_ID",
						"type": "varchar"
					},
					{
						"name": "Dealer_ID",
						"type": "varchar"
					},
					{
						"name": "Model_ID",
						"type": "varchar"
					},
					{
						"name": "Revenue",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "Units_Sold",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "Date_ID",
						"type": "varchar"
					},
					{
						"name": "Day",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Month",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Year",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Branch_Name",
						"type": "varchar"
					},
					{
						"name": "Dealer_Name",
						"type": "varchar"
					},
					{
						"name": "Product_Name",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().tableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_DB_Bronze_Pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SQL_DB_To_Bronze",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "current_load",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "last_load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select * from source_cars_data \nwhere Date_ID > '@{activity('last_load').output.value[0].last_load}'\nand Date_ID <= '@{activity('current_load').output.value[0].max_date}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_sqlDB",
								"type": "DatasetReference",
								"parameters": {
									"tableName": "source_cars_data"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_bronze",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "current_load",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select max(Date_ID) as max_date from source_cars_data;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_sqlDB",
								"type": "DatasetReference",
								"parameters": {
									"tableName": "source_cars_data"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "last_load",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select * from water_table",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_sqlDB",
								"type": "DatasetReference",
								"parameters": {
									"tableName": "water_table"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Update last_load",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "SQL_DB_To_Bronze",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[UpdateWatermarkTable]",
							"storedProcedureParameters": {
								"lastload": {
									"value": {
										"value": "@activity('current_load').output.value[0].max_date",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "BronzeToSilver",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Update last_load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/dev-carproject/bronze to silver - car"
						},
						"linkedServiceName": {
							"referenceName": "ls_databricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Dim_Model",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "BronzeToSilver",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/dev-carproject/silver to gold_dim_model",
							"baseParameters": {
								"incremental_flag": "1"
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_databricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Dim_Dealer",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "BronzeToSilver",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/dev-carproject/silver to gold_dim_dealer",
							"baseParameters": {
								"incremental_flag": "1"
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_databricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Dim_Branch",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "BronzeToSilver",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/dev-carproject/silver to gold_dim_branch",
							"baseParameters": {
								"incremental_flag": "1"
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_databricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Dim_Date",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "BronzeToSilver",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/dev-carproject/silver to gold_dim_date",
							"baseParameters": {
								"incremental_flag": "1"
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_databricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "SilverToGold-fact",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Dim_Model",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Dim_Dealer",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Dim_Branch",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Dim_Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/dev-carproject/silver to gold - fact"
						},
						"linkedServiceName": {
							"referenceName": "ls_databricks",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-02-12T07:42:20Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_sqlDB')]",
				"[concat(variables('factoryId'), '/datasets/ds_bronze')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_databricks')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/API_SQL_DB_Pipeline_1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Collect Git Files",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {
								"Accept": "application/vnd.github.v3+json"
							},
							"url": {
								"value": "https://api.github.com/repos/camrental/Azure-Car-Project/contents/Files/Sales\n",
								"type": "Expression"
							},
							"authentication": {
								"type": "Basic",
								"username": "camrental",
								"password": {
									"type": "AzureKeyVaultSecret",
									"store": {
										"referenceName": "ls_key_vault",
										"type": "LinkedServiceReference"
									},
									"secretName": "gitpass"
								}
							}
						}
					},
					{
						"name": "Copy Each File",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Collect Git Files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@json(activity('Collect Git Files').output.Response)\n",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy from Git to DB_copy1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "upsert",
											"upsertSettings": {
												"useTempDB": true,
												"keys": [
													"Branch_ID",
													"Dealer_ID",
													"Model_ID",
													"Date_ID"
												]
											},
											"sqlWriterUseTableLock": false,
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "Branch_ID",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Branch_ID",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "Dealer_ID",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Dealer_ID",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "Model_ID",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Model_ID",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "Revenue",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Revenue",
														"type": "Int64",
														"physicalType": "bigint"
													}
												},
												{
													"source": {
														"name": "Units_Sold",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Units_Sold",
														"type": "Int64",
														"physicalType": "bigint"
													}
												},
												{
													"source": {
														"name": "Date_ID",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Date_ID",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "Day",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Day",
														"type": "Int32",
														"physicalType": "int"
													}
												},
												{
													"source": {
														"name": "Month",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Month",
														"type": "Int32",
														"physicalType": "int"
													}
												},
												{
													"source": {
														"name": "Year",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Year",
														"type": "Int32",
														"physicalType": "int"
													}
												},
												{
													"source": {
														"name": "BranchName",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Branch_Name",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "DealerName",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Dealer_Name",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "Product_Name",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Product_Name",
														"type": "String",
														"physicalType": "varchar"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_git",
											"type": "DatasetReference",
											"parameters": {
												"fileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_sqlDB",
											"type": "DatasetReference",
											"parameters": {
												"tableName": "source_cars_data"
											}
										}
									]
								},
								{
									"name": "Copy File to Archieve",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Copy from Git to DB_copy1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "Branch_ID",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Branch_ID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "Dealer_ID",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Dealer_ID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "Model_ID",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Model_ID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "Revenue",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Revenue",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "Units_Sold",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Units_Sold",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "Date_ID",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Date_ID",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "Day",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Day",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "Month",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Month",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "Year",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Year",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "BranchName",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "BranchName",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "DealerName",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "DealerName",
														"type": "String",
														"physicalType": "UTF8"
													}
												},
												{
													"source": {
														"name": "Product_Name",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Product_Name",
														"type": "String",
														"physicalType": "UTF8"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_git",
											"type": "DatasetReference",
											"parameters": {
												"fileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_archieve_bronze",
											"type": "DatasetReference",
											"parameters": {
												"SinkFileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Get SHA of file",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Copy File to Archieve",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"method": "GET",
										"headers": {},
										"url": {
											"value": "https://api.github.com/repos/camrental/Azure-Car-Project/contents/Files/Sales/@{item().name}",
											"type": "Expression"
										},
										"authentication": {
											"type": "Basic",
											"username": "camrental",
											"password": {
												"type": "AzureKeyVaultSecret",
												"store": {
													"referenceName": "ls_key_vault",
													"type": "LinkedServiceReference"
												},
												"secretName": "gitpass"
											}
										}
									}
								},
								{
									"name": "Delete Git File",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Get SHA of file",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"method": "DELETE",
										"headers": {
											"accept": {
												"value": "application/vnd.github+json",
												"type": "Expression"
											}
										},
										"url": {
											"value": "https://api.github.com/repos/camrental/Azure-Car-Project/contents/Files/Sales/@{item().name}",
											"type": "Expression"
										},
										"body": {
											"value": "{\n    \"message\": \"Deleting file from ADF\",\n    \"sha\": \"@{activity('Get SHA of file').output.sha}\"\n}",
											"type": "Expression"
										},
										"authentication": {
											"type": "Basic",
											"username": "camrental",
											"password": {
												"type": "AzureKeyVaultSecret",
												"store": {
													"referenceName": "ls_key_vault",
													"type": "LinkedServiceReference"
												},
												"secretName": "PATgit"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Execute DB To Gold",
						"type": "ExecutePipeline",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Copy Each File",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SQL_DB_Bronze_Pipeline",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"test": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-02-12T07:13:34Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/SQL_DB_Bronze_Pipeline')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_key_vault')]",
				"[concat(variables('factoryId'), '/datasets/ds_git')]",
				"[concat(variables('factoryId'), '/datasets/ds_sqlDB')]",
				"[concat(variables('factoryId'), '/datasets/ds_archieve_bronze')]"
			]
		}
	]
}